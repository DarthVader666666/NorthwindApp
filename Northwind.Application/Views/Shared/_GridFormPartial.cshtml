@using System.Reflection;
@using Northwind.Bll.Services.Extensions;
@model IEnumerable<object>

@functions {
    string ControllerName => ViewData["ControllerName"].ToString().SplitForUpperCase(Model.FirstOrDefault());
    PropertyInfo[] Properties => base.Model.First().GetType().GetProperties();
    string Disabled => User.IsInRole("admin") ? "" : "disabled";

    object? GetPropertyValue<T>(object item, params string[] search)
    {
        PropertyInfo property = item.GetType().GetProperties().First(p => search.Any(s => p.Name.Contains(s)));
        var value = property.GetValue(item);

        return value is T ? value : null;
    }

    int GetId(object item)
    {
        return (int)(Properties.First(x => x.Name.Contains(ControllerName) && x.Name.Contains("Id")).GetValue(item) ?? 0);
    }

    string GetDetailsLink(int id) => Url.ActionLink("Details", ControllerName, new { id = id }) ?? "/Home/Index";
}

<input onchange="onChangeSelectAllHandler(this.checked)" id="selectAllCheckbox" style="margin-left:120px;" type="checkbox" @Disabled />
<label >Select all</label>

<form id="form" method="get" asp-action=@ViewData["ActionName"]>
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col p-3" style="text-align: center">
                <div style="cursor:pointer" onclick="location.href = '@GetDetailsLink(GetId(item))'">
                    <img src="data:image/bmp;base64,@Convert.ToBase64String(GetPropertyValue<byte[]>(item, "Picture", "Photo", "Image") as byte[] ?? new byte[0])" style="height:120px;width:120px;" />
                </div>
                <div class="text-xl-center fw-bold m-2">
                    @(GetPropertyValue<string>(item, "Name") as string)
                </div>
                <div class="text-center align-content-center">
                    <input name="ids" type="checkbox" id="@GetId(item)" value="@GetId(item)" onclick="onChangeHandler(this)" @Disabled />
                </div>
            </div>
        }
    </div>
</form>
