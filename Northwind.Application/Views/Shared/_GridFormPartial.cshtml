@using System.Reflection;
@using Northwind.Application.Constants
@using Northwind.Bll.Services.Extensions;
@model IEnumerable<object>

@functions {
    string ControllerName => ViewData["ControllerName"]?.ToString()?.SplitForUpperCase(Model.FirstOrDefault()) ?? "";
    PropertyInfo[] Properties => base.Model.First().GetType().GetProperties();
    string Disabled => User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Owner) ? "" : "disabled";

    object? GetPropertyValue<T>(object item, params string[] search)
    {
        PropertyInfo property = item.GetType().GetProperties().First(p => search.Any(s => p.Name.Contains(s)));
        var value = property.GetValue(item);

        return value is T ? value : null;
    }

    int GetId(object item)
    {
        return (int)(Properties.First(x => ControllerName.Contains(x.Name[..^3]) && x.Name.Contains("Id")).GetValue(item) ?? 0);
    }

    string GetLink(int? id)
    {
        var defaultRoute = "/Home/Index";

        if (User.IsInRole(UserRoles.Customer) && !User.IsInRole(UserRoles.Admin))
        {
            if (ControllerName == "Categories")
            {
                return Url.ActionLink("Index", "Products", new { categoryId = id }) ?? defaultRoute;
            }
        }

        return Url.ActionLink("Details", ControllerName, new { id = id }) ?? defaultRoute;
    }
}

<form id="form" method="get" asp-action=@ViewData["ActionName"]>
    @if (User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Owner))
    {
        <div class="select-all">
            <input onchange="onChangeSelectAllHandler(this.checked)" id="selectAllCheckbox" type="checkbox" @Disabled />
            <label>Select all</label>
        </div>
    }

    <div class="container">
        @foreach (var item in Model)
        {
            <div class="item">
                <div onclick="location.href = '@GetLink(GetId(item))'">
                    <img src="data:image/bmp;base64,@Convert.ToBase64String(GetPropertyValue<byte[]>(item, "Picture", "Photo", "Image") as byte[] ?? new byte[0])" style="height:120px;width:120px;" />
                </div>
                <div class="fw-bold">
                    @(GetPropertyValue<string>(item, "Name") as string)
                </div>

                @if (User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Owner))
                {
                    <div>
                        <input name="ids" type="checkbox" id="@GetId(item)" value="@GetId(item)" onclick="onChangeHandler(this)" @Disabled />
                    </div>
                }
            </div>
        }
    </div>
</form>

<style>
    .select-all {
        display: flex;
        flex-flow: row wrap;
        align-items: center;
        column-gap: 0.5rem;
        margin: 0.2rem
    }

    img {
        cursor: pointer;
        height: 130px;
    }

    img:hover, img:active {
        height:130px !important;
        width:130px !important;
    }

    .container {
        padding:10px;
        display: flex;
        flex-flow: row wrap;
        max-height: 100%;
        width: 100vw;
        gap: 2rem;
        place-content: center;
    }

    .item {
        display: flex;
        flex-flow: column wrap;
        height: 180px;
        width:130px;
        place-items: center;
        place-content: space-between;
    }
</style>
