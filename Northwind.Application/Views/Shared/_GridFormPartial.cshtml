@using System.Reflection;
@using Northwind.Application.Constants
@using Northwind.Bll.Services.Extensions;
@model IEnumerable<object>

@functions {
    string ControllerName => ViewData["ControllerName"]?.ToString()?.SplitForUpperCase(Model.FirstOrDefault()) ?? "";
    PropertyInfo[] Properties => base.Model.First().GetType().GetProperties();
    string Disabled => User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Owner) ? "" : "disabled";

    object? GetPropertyValue<T>(object item, params string[] search)
    {
        PropertyInfo property = item.GetType().GetProperties().First(p => search.Any(s => p.Name.Contains(s)));
        var value = property.GetValue(item);

        return value is T ? value : null;
    }

    int GetId(object item)
    {
        return (int)(Properties.First(x => ControllerName.Contains(x.Name[..^3]) && x.Name.Contains("Id")).GetValue(item) ?? 0);
    }

    string GetLink(int? id)
    {
        var defaultRoute = "/Home/Index";

        if (User.IsInRole(UserRoles.Customer) && !User.IsInRole(UserRoles.Admin))
        {
            if (ControllerName == "Categories")
            {
                return Url.ActionLink("Index", "Products", new { categoryId = id }) ?? defaultRoute;
            }
        }

        return Url.ActionLink("Details", ControllerName, new { id = id }) ?? defaultRoute;
    }
}

<div>
    <h1>@ControllerName</h1>

    @if (User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Owner) || User.IsInRole(UserRoles.Seller))
    {
        @await Html.PartialAsync("_IndexButtonsPartial", null as SelectList)

        <div class="select-all">
            <input form="form" onchange="onChangeSelectAllHandler(this.checked)" id="selectAllCheckbox" type="checkbox" @Disabled />
            <label>Select all</label>
        </div>
    }

    <form id="form" method="get" asp-action=@ViewData["ActionName"]>
        <div class="container">
            @foreach (var item in Model)
            {
                <div class="item">
                    <div onclick="location.href = '@GetLink(GetId(item))'">
                        <img class="img" src="data:image/bmp;base64,@Convert.ToBase64String(GetPropertyValue<byte[]>(item, "Picture", "Photo", "Image") as byte[] ?? new byte[0])" />
                    </div>

                    @if (User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Owner))
                    {
                        <input class="check" name="ids" type="checkbox" id="@GetId(item)" value="@GetId(item)" onclick="onChangeHandler(this)" @Disabled />
                    }

                    <div class="fw-bold">
                        @(GetPropertyValue<string>(item, "Name") as string)
                    </div>                    
                </div>
            }
        </div>
    </form>
</div>


<style>
    .check {
        margin-top:8px;
    }

    .select-all {
        display: flex;
        flex-flow: row wrap;
        align-items: center;
        column-gap: 0.5rem;
        margin: 0.2rem;
        width: fit-content;
    }

    .container {
        display: flex;
        flex-flow: row wrap;
        gap: 1rem;
        place-content: center;
    }

    .item {
        display: flex;
        flex-flow: column wrap;
        place-items: center;
        place-content: center;
        height: 190px;
        width: 130px
    }

    .img {
        cursor: pointer;
        height: 120px;
        width: 120px;
    }

    img:hover, img:active {
        height:130px !important;
        width:130px !important;
    }

</style>
